/* KKMonthsaryCss.css */

@import url('https://fonts.googleapis.com/css2?family=Dancing+Script&family=Roboto:wght@400;700&display=swap');

/* Base styles for fonts, typically done in Tailwind config or directly in HTML body */
body {
    font-family: 'Roboto', sans-serif;
}

/* Custom font class for specific elements like titles */
.dancing-script {
    font-family: 'Dancing Script', cursive;
}

/* Tab Content Visibility */
.tab {
    display: none; /* Hide all tab content by default */
    animation: fadeIn 0.5s ease-in-out; /* Add a fade-in animation */
}

.tab.active {
    display: block; /* Show the active tab content */
}

/* Keyframe for fade-in animation */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Styling for the modal content (edit form) to allow scrolling if content overflows */
.modal-content-scrollable {
    max-height: 90vh; /* Limit height to 90% of viewport height */
    overflow-y: auto; /* Enable vertical scrolling */
    -webkit-overflow-scrolling: touch; /* Smooth scrolling for iOS */
}

/* General styling for form inputs - mostly handled by Tailwind */
/* You might want to add custom focus styles if Tailwind's default focus:ring isn't enough */
input[type="text"],
input[type="password"],
input[type="time"], /* Added this for the time input */
textarea {
    /* Tailwind's shadow, appearance-none, border, rounded, w-full, py-3, px-4, text-gray-700, leading-tight
       already provide good base styling.
       You might add:
       outline: none; // ensure no default browser outline
       transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    */
}

/* Focus styles - Tailwind's focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent are typically sufficient */
/* If you need more specific focus styles, you can add them here: */
/*
input[type="text"]:focus,
input[type="password"]:focus,
input[type="time"]:focus,
textarea:focus {
    border-color: var(--pink-500, #EC4899); // Using a CSS variable or hardcoded color
    box-shadow: 0 0 0 2px rgba(236, 72, 153, 0.5); // Pink 500 with transparency
}
*/

/* Styles for the delete button within the tab button container */
.tab-delete-button {
    /* Tailwind's ml-2, text-red-400, hover:text-red-600, focus:outline-none already apply */
    font-size: 0.9em; /* Smaller icon */
    background: none;
    border: none;
    cursor: pointer;
    padding: 0 5px; /* Adjust padding for better click area */
    position: absolute; /* Position relative to .tab-button-container */
    right: -10px; /* Adjust as needed to position it outside the tab button */
    top: 50%;
    transform: translateY(-50%);
    opacity: 0; /* Hidden by default */
    transition: opacity 0.2s ease-in-out;
}

/* Show delete button on hover of the button's container */
.tab-button-container:hover .tab-delete-button {
    opacity: 1; /* Show on hover */
}

/* Adjustments for the main tab buttons if needed */
.tab-button {
    /* Most styling is in Tailwind. You can add specific custom rules if needed. */
}

/* Responsive adjustments if required beyond Tailwind's defaults */
/* For example, if tab buttons wrap awkwardly on small screens: */
@media (max-width: 640px) {
    #tabButtons {
        flex-direction: column; /* Stack buttons vertically on small screens */
        align-items: flex-start; /* Align to the left */
    }
    .tab-button-container {
        width: 100%; /* Make button containers full width */
        margin-bottom: 0.5rem; /* Add some space between stacked buttons */
    }
    .tab-button {
        border-radius: 0.5rem; /* Make tabs fully rounded on sides when stacked */
        width: calc(100% - 30px); /* Account for delete button */
        padding-right: 2.5rem; /* Add padding to prevent text overlap with delete button */
    }
    .tab-delete-button {
        right: 5px; /* Adjust position for stacked buttons */
    }
}